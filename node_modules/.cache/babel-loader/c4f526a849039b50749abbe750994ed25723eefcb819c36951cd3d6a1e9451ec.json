{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\eWalletHub\\\\src\\\\components\\\\Balance.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Balance = ({\n  walletAddress\n}) => {\n  _s();\n  const [balanceETH, setBalanceETH] = useState(0);\n  const [balanceUSD, setBalanceUSD] = useState(0);\n  useEffect(() => {\n    const fetchBalance = async () => {\n      // Fetch ETH balance using ethers.js or any other method.\n      const balanceInETH = await getEthBalance(walletAddress);\n      setBalanceETH(balanceInETH);\n\n      // Fetch ETH price in USD using CoinGecko API\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\n      const priceInUSD = response.data.ethereum.usd;\n      setBalanceUSD(balanceInETH * priceInUSD);\n    };\n    fetchBalance();\n  }, [walletAddress]);\n  const getEthBalance = async address => {\n    // Use ethers.js to get the balance (this is just an example)\n    // Replace with actual implementation.\n    return Math.random() * 10; // Mock balance for demonstration purposes.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [balanceETH.toFixed(4), \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$\", balanceUSD.toFixed(2), \" USD\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Balance, \"2Mq5vdicjmp3ZvOjA2Jq9QbG0L8=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Balance","walletAddress","_s","balanceETH","setBalanceETH","balanceUSD","setBalanceUSD","fetchBalance","balanceInETH","getEthBalance","response","get","priceInUSD","data","ethereum","usd","address","Math","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/project/eWalletHub/src/components/Balance.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Balance = ({ walletAddress }) => {\r\n    const [balanceETH, setBalanceETH] = useState(0);\r\n    const [balanceUSD, setBalanceUSD] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            // Fetch ETH balance using ethers.js or any other method.\r\n            const balanceInETH = await getEthBalance(walletAddress);\r\n            setBalanceETH(balanceInETH);\r\n\r\n            // Fetch ETH price in USD using CoinGecko API\r\n            const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\r\n            const priceInUSD = response.data.ethereum.usd;\r\n            setBalanceUSD(balanceInETH * priceInUSD);\r\n        };\r\n\r\n        fetchBalance();\r\n    }, [walletAddress]);\r\n\r\n    const getEthBalance = async (address) => {\r\n        // Use ethers.js to get the balance (this is just an example)\r\n        // Replace with actual implementation.\r\n        return Math.random() * 10; // Mock balance for demonstration purposes.\r\n    };\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h5>Balance</h5>\r\n            <p>{balanceETH.toFixed(4)} ETH</p>\r\n            <p>${balanceUSD.toFixed(2)} USD</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Balance;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,YAAY,GAAG,MAAMC,aAAa,CAACR,aAAa,CAAC;MACvDG,aAAa,CAACI,YAAY,CAAC;;MAE3B;MACA,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,8EAA8E,CAAC;MAChH,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAACC,GAAG;MAC7CT,aAAa,CAACE,YAAY,GAAGI,UAAU,CAAC;IAC5C,CAAC;IAEDL,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,aAAa,CAAC,CAAC;EAEnB,MAAMQ,aAAa,GAAG,MAAOO,OAAO,IAAK;IACrC;IACA;IACA,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAC/B,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBrB,OAAA;MAAAqB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBzB,OAAA;MAAAqB,QAAA,GAAIjB,UAAU,CAACsB,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClCzB,OAAA;MAAAqB,QAAA,GAAG,GAAC,EAACf,UAAU,CAACoB,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAACtB,EAAA,CAhCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}