{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\eWalletHub\\\\src\\\\components\\\\Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wallet = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [seedPhrase, setSeedPhrase] = useState('');\n  const createWallet = async () => {\n    const wallet = ethers.Wallet.createRandom();\n    setWalletAddress(wallet.address);\n    setSeedPhrase(wallet.mnemonic.phrase);\n    // Store private key securely (not shown here for security reasons)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"eWalletHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createWallet,\n      children: \"Create Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), walletAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wallet Address: \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 31\n    }, this), seedPhrase && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Seed Phrase: \", seedPhrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Wallet, \"CDHOm8N7GnC9G09swzw32LLz8C8=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Wallet","_s","walletAddress","setWalletAddress","seedPhrase","setSeedPhrase","createWallet","wallet","createRandom","address","mnemonic","phrase","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/project/eWalletHub/src/components/Wallet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Wallet = () => {\r\n    const [walletAddress, setWalletAddress] = useState('');\r\n    const [seedPhrase, setSeedPhrase] = useState('');\r\n\r\n    const createWallet = async () => {\r\n        const wallet = ethers.Wallet.createRandom();\r\n        setWalletAddress(wallet.address);\r\n        setSeedPhrase(wallet.mnemonic.phrase);\r\n        // Store private key securely (not shown here for security reasons)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>eWalletHub</h1>\r\n            <button onClick={createWallet}>Create Wallet</button>\r\n            {walletAddress && <p>Wallet Address: {walletAddress}</p>}\r\n            {seedPhrase && <p>Seed Phrase: {seedPhrase}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wallet;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,MAAM,GAAGV,MAAM,CAACG,MAAM,CAACQ,YAAY,CAAC,CAAC;IAC3CL,gBAAgB,CAACI,MAAM,CAACE,OAAO,CAAC;IAChCJ,aAAa,CAACE,MAAM,CAACG,QAAQ,CAACC,MAAM,CAAC;IACrC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAQkB,OAAO,EAAEX,YAAa;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDd,aAAa,iBAAIH,OAAA;MAAAa,QAAA,GAAG,kBAAgB,EAACV,aAAa;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvDZ,UAAU,iBAAIL,OAAA;MAAAa,QAAA,GAAG,eAAa,EAACR,UAAU;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd,CAAC;AAACf,EAAA,CAnBID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAqBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}