{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\eWalletHub\\\\src\\\\components\\\\Balance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Balance = ({\n  walletAddress\n}) => {\n  _s();\n  const [balanceETH, setBalanceETH] = useState(0);\n  const [balanceUSD, setBalanceUSD] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBalance = async () => {\n      if (walletAddress) {\n        try {\n          // Create a provider to interact with Ethereum network\n          const provider = new ethers.BrowserProvider(window.ethereum);\n\n          // Fetch balance in Wei and convert to ETH\n          const balanceInWei = await provider.getBalance(walletAddress);\n          const balanceInEth = ethers.formatEther(balanceInWei);\n          setBalanceETH(balanceInEth);\n\n          // Fetch ETH price in USD using CoinGecko API\n          const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\n          const priceInUSD = response.data.ethereum.usd;\n          setBalanceUSD(balanceInEth * priceInUSD);\n        } catch (error) {\n          console.error(\"Error fetching balance:\", error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchBalance();\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [balanceETH, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", balanceUSD.toFixed(2), \" USD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Balance, \"Dge50khr29tuXCP55eZWiwIEtOs=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useEffect","useState","axios","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","Balance","walletAddress","_s","balanceETH","setBalanceETH","balanceUSD","setBalanceUSD","loading","setLoading","fetchBalance","provider","BrowserProvider","window","ethereum","balanceInWei","getBalance","balanceInEth","formatEther","response","get","priceInUSD","data","usd","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["C:/project/eWalletHub/src/components/Balance.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Balance = ({ walletAddress }) => {\r\n    const [balanceETH, setBalanceETH] = useState(0);\r\n    const [balanceUSD, setBalanceUSD] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            if (walletAddress) {\r\n                try {\r\n                    // Create a provider to interact with Ethereum network\r\n                    const provider = new ethers.BrowserProvider(window.ethereum);\r\n                    \r\n                    // Fetch balance in Wei and convert to ETH\r\n                    const balanceInWei = await provider.getBalance(walletAddress);\r\n                    const balanceInEth = ethers.formatEther(balanceInWei);\r\n                    setBalanceETH(balanceInEth);\r\n\r\n                    // Fetch ETH price in USD using CoinGecko API\r\n                    const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\r\n                    const priceInUSD = response.data.ethereum.usd;\r\n                    setBalanceUSD(balanceInEth * priceInUSD);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching balance:\", error);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchBalance();\r\n    }, [walletAddress]);\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h5>Balance</h5>\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <>\r\n                    <p>{balanceETH} ETH</p>\r\n                    <p>${balanceUSD.toFixed(2)} USD</p>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Balance;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIR,aAAa,EAAE;QACf,IAAI;UACA;UACA,MAAMS,QAAQ,GAAG,IAAIf,MAAM,CAACgB,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;;UAE5D;UACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,UAAU,CAACd,aAAa,CAAC;UAC7D,MAAMe,YAAY,GAAGrB,MAAM,CAACsB,WAAW,CAACH,YAAY,CAAC;UACrDV,aAAa,CAACY,YAAY,CAAC;;UAE3B;UACA,MAAME,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,8EAA8E,CAAC;UAChH,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACR,QAAQ,CAACS,GAAG;UAC7ChB,aAAa,CAACU,YAAY,GAAGI,UAAU,CAAC;QAC5C,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACnD,CAAC,SAAS;UACNf,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;EAEnB,oBACIJ,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB7B,OAAA;MAAA6B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfvB,OAAO,gBACJV,OAAA;MAAA6B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBjC,OAAA,CAAAE,SAAA;MAAA2B,QAAA,gBACI7B,OAAA;QAAA6B,QAAA,GAAIvB,UAAU,EAAC,MAAI;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvBjC,OAAA;QAAA6B,QAAA,GAAG,GAAC,EAACrB,UAAU,CAAC0B,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACrC,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA7CIF,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}